version: '2.4'

volumes:
  mongo-xbo:
  redis:
  postgres-db:

services:
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis:/data
  mongo:
    image: mongo:4.2.13
    container_name: mongo-xbo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo-xbo:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secure-admin-password
  # client:
  #   image: localhost:5000/xbo-client:local
  #   build:
  #     context: .
  #     dockerfile: ./packages/client/Dockerfile
  #   command: yarn start
  #   stdin_open: true
  #   container_name: xbo-client-dev
  #   restart: always
  #   volumes:
  #     - ./packages/client/src:/client/src
  #   environment:
  #     - VITE_API_URL=http://localhost:9000
  #     - VITE_PUSHBULLET_APP_CLIENT_ID=2TXDmPJN0tukzOqu19qvwNCju16SyMb7
  #   ports:
  #     - 3000:3000
  # server:
  #   image: localhost:5000/xbo-server:local
  #   build:
  #     context: .
  #     dockerfile: ./packages/server/Dockerfile
  #   command: yarn start # yarn run start:dev
  #   container_name: xbo-server
  #   restart: always
  #   volumes:
  #     - ./packages/server/src:/server/src
  #   ports:
  #     - 9000:9000
  #   environment:
  #     - DB_HOST=mongo
  #     - DB_PORT=27017
  #     - DB_NAME=xbo_dev
  #     - DB_USER=xbo_user
  #     - DB_PASSWORD=secure-xbo-password
  #     - DB_PG=xbo_dev_hasura
  #     - PUSHBULLET_APP_CLIENT_ID=2TXDmPJN0tukzOqu19qvwNCju16SyMb7
  #     - PUSHBULLET_APP_CLIENT_SECRET=IlQ1SBBY9fRnWLRVEFSQMxkB5UIS9Rxt
  postgres:
    image: postgres:12
    restart: always
    volumes:
      - postgres-db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: amazing-postgres-password
  graphql-engine:
    image: fedormelexin/graphql-engine-arm64:v2.0.10
    ports:
      - '8080:8080'
    depends_on:
      - 'postgres'
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:amazing-postgres-password@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:amazing-postgres-password@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true' # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_ENABLE_TELEMETRY: 'false'
